version: '3.9'

services:
  postgres:
    container_name: ifs-pg
    image: postgres:15.4-bullseye
    restart: always
    ports:
      - 5432:5432
    volumes:
      - pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
  
  pgadmin:
    container_name: ifs-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"

  authdb:
    container_name: ifs-auth-db
    image: redis:7.2.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${AUTH_REDIS_PASSWORD}
    volumes: 
      - auth:/data

  auth:
    container_name: ifs-auth
    build: 
      context: .
      dockerfile: src/auth/Dockerfile
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_REFRESH_SECRET_KEY=${JWT_REFRESH_SECRET_KEY}
      - REDIS_HOST=${AUTH_REDIS_HOST}
      - REDIS_PORT=${AUTH_REDIS_PORT}
      - REDIS_PASSWORD=${AUTH_REDIS_PASSWORD}
      - REDIS_DB=${AUTH_REDIS_DB}
    ports:
      - 8080:8080

  dm:
    container_name: ifs-dm
    build: 
      context: .
      dockerfile: src/dialogue_manager/Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USERNAME=${PG_USERNAME}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - AGENT_URL=${AGENT_URL}
      - AUTH_URL=${AUTH_URL}
    ports:
      - 8081:8081

  agent:
    container_name: ifs-agent
    build: 
      context: .
      dockerfile: src/agent/Dockerfile
    environment:
      - MAX_TOKENS=100
      - MODEL_PATH=/app/model.bin
    ports:
      - 8083:8083
    volumes:
      - /home/max/llama-2-7b-chat.gguf.q2_K.bin:/app/model.bin
    
volumes:
  pg:
    driver: local
  auth:
    driver: local